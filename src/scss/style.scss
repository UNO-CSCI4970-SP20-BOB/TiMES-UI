// Get variables first for use in other @use
@use './variables';

// Third-party imports
@use '@material/theme' with (
  $primary: variables.$primary,
  $secondary: variables.$secondary
);
@use '@material/typography' with (
  $font-family: unquote($string: '\'Roboto Condensed\', Roboto, sans-serif')
);
@use '@material/shape' with (
  $small-component-radius: 2.5px,
  $medium-component-radius: 0,
  $large-component-radius: 0
);
@use '@material/animation';
@use '@material/button';
@use '@material/card';
@use '@material/checkbox';
@use '@material/dialog';
@use '@material/icon-button';
@use '@material/list';
@use '@material/snackbar';
@use '@material/top-app-bar/mdc-top-app-bar';

// First-party imports
@use './events';

// Third-party includes
@include button.core-styles;
@include button.theme-baseline;
@include card.core-styles;
@include checkbox.core-styles;
@include dialog.core-styles;
@include icon-button.core-styles;
@include list.core-styles;
@include theme.core-styles;
@include snackbar.core-styles;
@include typography.core-styles;

// First-party includes
@include events.core-styles;

// Font imports
@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Material+Icons+Sharp&display=block');

// Main styles
body {
  @include typography.base;

  background-color: #f8f8f8;
  font-size: variables.$font-size;
  margin: 0;
}

address {
  font-style: normal;
}

.app-bar {
  $exit-length: 50ms;
  $enter-length: 150ms;
  $enter-delay: $exit-length + 10ms;

  opacity: 1;
  transition: animation.enter(opacity, $enter-length, $enter-delay);
  visibility: visible;

  &--hidden {
    opacity: 0;
    transition: animation.exit-temporary(opacity, $exit-length), visibility 0ms $exit-length;
    visibility: hidden;
  }

  &--content-hideable > * {
    opacity: 1;
    transition: animation.enter(opacity, $enter-length, $enter-delay);
    visibility: visible;
  }

  &--content-hidden > * {
    opacity: 0;
    transition: animation.exit-permanent(opacity, $exit-length), visibility 0ms $exit-length;
    visibility: hidden;
  }

  &--contextual {
    background-color: variables.$secondary;
  }
}
